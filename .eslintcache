[{"C:\\Users\\User\\Desktop\\Projects\\music-app\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Projects\\music-app\\src\\App.js":"2","C:\\Users\\User\\Desktop\\Projects\\music-app\\src\\MusicContext.js":"3"},{"size":270,"mtime":1609514900797,"results":"4","hashOfConfig":"5"},{"size":4660,"mtime":1610256996547,"results":"6","hashOfConfig":"5"},{"size":402,"mtime":1609488235549,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"8dtow4",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\User\\Desktop\\Projects\\music-app\\src\\index.js",[],["17","18"],"C:\\Users\\User\\Desktop\\Projects\\music-app\\src\\App.js",["19","20"],"import React, { useState, useRef, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { MusicContext } from './MusicContext';\n\nimport Postie1 from '../src/music/post_malone/Post Malone - Better Now.mp3';\nimport Postie2 from '../src/music/post_malone/Post Malone - Candy Paint.mp3';\nimport Postie3 from '../src/music/post_malone/Post Malone - Circles.mp3';\nimport Postie4 from '../src/music/post_malone/Post Malone - Goodbyes.mp3';\nimport Postie5 from '../src/music/post_malone/Post Malone - I Fall Apart (Lofi Version).mp3';\nimport Postie6 from '../src/music/post_malone/Post Malone - I Fall Apart.m4a';\nimport Postie7 from '../src/music/post_malone/Post Malone - Psycho ft. Ty Dolla Ign.m4a';\nimport Postie8 from '../src/music/post_malone/Post Malone - Take It Back ft. Juice WRLD.mp3';\nimport Postie9 from '../src/music/post_malone/Post Malone, Swae Lee - Sunflower.mp3';\n\nfunction App() {\n\n  // Percent = (n / wn) = P% * 100 = 100P%\n\n  let player = useRef(null);\n  // let [music, setMusic] = useState(null);\n  // let [vol, setVol] = useState(1);\n\n  let [currentMusic, setCurrentMusic] = useState(null);\n  let [currentMusicTitle, setCurrentMusicTitle] = useState(null);\n  // let [isPlaying, setIsPlaying] = useState(false);\n\n  let post_malone = {\n    artist: {\n      name: 'Post Malone',\n      image: ''\n    },\n    musics: [\n        {\n          src: Postie1,\n          title: 'Post Malone - Better Now'\n        }, {\n          src: Postie2,\n          title: 'Post Malone - Candy Paint'\n        }, {\n          src: Postie3,\n          title: 'Post Malone - Circles'\n        }, {\n          src: Postie4,\n          title: 'Post Malone - Goodbyes'\n        }, {\n          src: Postie5,\n          title: 'Post Malone - I Fall Apart (Lofi Version)'\n        }, {\n          src: Postie6,\n          title: 'Post Malone - I Fall Apart'\n        }, {\n          src: Postie7,\n          title: 'Post Malone - Psycho ft. Ty Dolla Ign'\n        }, {\n          src: Postie8,\n          title: 'Post Malone - Take It Back ft. Juice WRLD'\n        }, {\n          src: Postie9,\n          title: 'Post Malone, Swae Lee - Sunflower'\n        }\n      ]\n  };\n\n  let [seconds, setSeconds] = useState(0);\n  let [duration, setDuration] = useState(0);\n\n  // Duration Handler\n  let durTemp = null;\n  useEffect(() => {\n    let audPlayer = document.getElementById('player');\n    audPlayer.addEventListener('durationchange', () => {\n      setDuration(audPlayer.duration);\n    })\n\n    window.addEventListener('dblclick', e => {\n      // player.pause();\n      // console.log(player.audioEl.current.pause);\n      audPlayer.paused ? audPlayer.play() : audPlayer.pause();\n      // for (let i in player.audioEl.current) {\n      //   console.log(i);\n      // }\n    })\n  }, [durTemp]);\n  \n  return (\n    <React.Fragment>\n      <ReactAudioPlayer\n        src={currentMusic}\n        autoPlay\n        controls\n        ref={ e => player = e }\n        id=\"player\"\n        onCanPlayThrough={() => console.log('player can now fully played') }\n        onLoadedMetadata={ () => console.log(\"Metadata Downloaded\") }\n        // onCanPlayThrough={() => console.log('Player is playing music right now.') }\n        listenInterval={1000}\n        onListen={() => setSeconds(player.audioEl.current.currentTime)}\n        // onPlay={() => setIsPlaying(true)}\n        // onPause={() => setIsPlaying(false)}\n      />\n\n      <div className=\"artist\">Post Malone</div>\n\n      <div className=\"music-grid\">\n        {post_malone.musics.map((music, i) => (\n          <React.Fragment key={i + 1}>\n          \n            <div className=\"music-bar\"\n              onClick= {\n                () => {\n                  setCurrentMusic(music.src);\n                  setCurrentMusicTitle(music.title);\n                }\n              }\n            >\n              {music.title}\n            </div>\n          </React.Fragment>\n        ))}\n      </div>\n\n      <div className=\"bottom-player\"\n        style={{\n          bottom: currentMusicTitle === null ? '-56px' : '0'\n        }}\n      >\n\n        <div className=\"duration-progress\"\n          style={{\n            width: `${(seconds / duration) * 100}%`,\n          }}\n        />\n\n        <div className=\"music-title\">\n          <div className=\"marquee-text\">\n            {currentMusicTitle === null ? '' : currentMusicTitle}\n          </div>\n        </div>\n\n        <div className=\"music-control\">\n          <div className=\"music-title-wrapper\" />\n          <div className=\"music-state\" />\n        </div>\n\n        {/* <div className=\"music-control\"></div> */}\n      </div>\n\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\Projects\\music-app\\src\\MusicContext.js",[],["21","22"],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":19},{"ruleId":"27","severity":1,"message":"31","line":4,"column":10,"nodeType":"29","messageId":"30","endLine":4,"endColumn":22},{"ruleId":"23","replacedBy":"32"},{"ruleId":"25","replacedBy":"33"},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-unused-vars","'ReactPlayer' is defined but never used.","Identifier","unusedVar","'MusicContext' is defined but never used.",["34"],["35"],"no-global-assign","no-unsafe-negation"]